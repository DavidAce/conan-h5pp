from conans import ConanFile, CMake, tools
from conans.tools import download, unzip
import os, re

class h5ppConan(ConanFile):
    name = "h5pp"
    version = "0.4.7"
    license = "MIT"
    url = "https://github.com/DavidAce/h5pp"
    settings = "os", "compiler", "build_type", "arch"
    generators = "cmake_paths"
    requires = "eigen/3.3.7@conan/stable", "spdlog/1.4.2@bincrafters/stable", "hdf5/1.10.5"
    build_policy    = 'missing'
    options         = {
        'shared': [True, False],
    }
    default_options = (
        'shared=False',
    )

    def source(self):

        zip_name = self.version+".zip"
        download("https://github.com/DavidAce/h5pp/archive/v"+self.version+".zip", zip_name)
        unzip(zip_name)
        # git = tools.Git(folder="h5pp-"+self.version)
        # git.clone("https://github.com/DavidAce/h5pp.git", "master")


    def build(self):
        cmake = CMake(self,build_type="Release")
        cmake.definitions["CMAKE_TOOLCHAIN_FILE"] = "conan_paths.cmake" #generated by cmake_path generator
        cmake.definitions["ENABLE_TESTS:BOOL"]              = True
        cmake.definitions["BUILD_EXAMPLES:BOOL"]            = False
        cmake.definitions['EIGEN3_NO_DEFAULT_PATH:BOOL']    = True
        cmake.definitions['EIGEN3_NO_CONFIG:BOOL']          = True
        cmake.definitions['SPDLOG_NO_DEFAULT_PATH:BOOL']    = True
        if tools.os_info.is_linux:
            cmake.definitions['BUILD_SHARED_LIBS:BOOL'] = True if self.options.shared else False

        cmake.configure( source_folder=self.build_folder+'/h5pp-'+self.version )
        cmake.build()
        cmake.test()
        cmake.install()

    def package_id(self):
        self.info.header_only()
